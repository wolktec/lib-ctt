import {
  CttAvailability,
  CttAvailabilityGroupData,
  CttAvailabilityWorkFrontData,
} from "../../interfaces/availabilityByHour.interface";

/**
 * Create the availability by hour
 * @param availabilityByHour - the availability by hour generated by the operational service.
 */
const createAvailabilityByHour = async (
  availabilityByHour: Record<string, CttAvailabilityWorkFrontData[]>,
  goal: number = 85
): Promise<CttAvailability> => {
  const formattedGroups: CttAvailabilityGroupData[] = [];

  for (const group in availabilityByHour) {
    const workFronts = availabilityByHour[group];

    const totalWorkFrontsAverage = workFronts.reduce((acc, workFront) => {
      return acc + workFront.average;
    }, 0);

    formattedGroups.push({
      group,
      workFronts,
      average: Number(totalWorkFrontsAverage / workFronts.length),
    });
  }

  const availabilityByHourData: CttAvailability = {
    goal,
    groups: formattedGroups,
  };

  return availabilityByHourData;
};

export default createAvailabilityByHour;
